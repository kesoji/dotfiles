" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

source ~/.vim/config/00_essential_setting.vim
source ~/.vim/config/10_essential_mapping.vim
let mapleader = ' '
nnoremap <Leader>ev :<C-u>vsplit ~/.ideavimrc<CR>
nnoremap <Leader>sv :<C-u>source ~/.ideavimrc<CR>

" https://qiita.com/sei40kr/items/09e7e92eb7686f9b5950
set multiple-cursors
set surround
set ideajoin
set clipboard+=unnamed        "clipboard options
"set digraph          "enable the entering of digraphs in Insert mode
"set gdefault         "the :substitute flag 'g' is default on
"set history          "number of command-lines that are remembered
set hlsearch         "highlight matches with last search pattern
"set ignorecase       "ignore case in search patterns
"set iskeyword        "defines keywords for commands like 'w', '*', etc.
set incsearch        "show where search pattern typed so far matches
"set matchpairs       "pairs of characters that % can match
"set nrformats        "number formats recognized for CTRL-A command
"set number           "print the line number in front of each line
"set relativenumber   "show the line number relative to the line with
"set                    "the cursor
"set scroll           "lines to scroll with CTRL-U and CTRL-D
"set scrolljump       "minimum number of lines to scroll
set scrolloff=5        "minimum nr. of lines above and below cursor
"set selection        "what type of selection to use
"set showmode         "message on status line to show current mode
"set sidescroll       "minimum number of columns to scroll horizontal
"set sidescrolloff    "min. nr. of columns to left and right of cursor
set smartcase        "no ignore case when pattern has uppercase
"set timeout          "use timeout for mapped key sequences
"set timeoutlen       "time that is waited for a mapped key sequence
"set undolevels       "maximum number of changes that can be undone
"set viminfo          "information to remember after restart
set visualbell       "use visual bell instead of beeping
"set wrapscan         "searches wrap around the end of the file

set matchit

set easymotion
nmap <Leader>f <Plug>(easymotion-f)
nmap <Leader>t <Plug>(easymotion-t)
nmap <Leader>F <Plug>(easymotion-F)
nmap <Leader>T <Plug>(easymotion-T)


vmap v <Action>(EditorSelectWord)
vmap <S-v> <Action>(EditorUnSelectWord)

"" IDE actions
"nmap / <Action>(Find)
"nmap n <Action>(FindNext)
"nmap N <Action>(FindPrevious)
"nmap U <Action>($Redo)
"nmap ; <Action>(AceJumpAction)
nmap <Space>o <Action>GotoClass)
nmap <Space>O <Action>(GotoFile)
"nmap <Space>d <Action>(CloseContent)
"nmap <Space>j <Action>(RecentFiles)
"nmap <Space>k <Action>(FileStructurePopup)
"nmap <Space>h <Action>(QuickJavaDoc)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [q <Action>(GotoPreviousError)
nmap ]q <Action>(GotoNextError)
nmap gr <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap <Leader>G <Action>(Generate)
nmap <Leader>r <Action>(Refactorings.QuickListPopupAction)
"nmap <Leader>k <Action>(ShowErrorDescription)
nmap <Leader>k <Action>(ShowHoverInfo)
nmap <Leader>a <Action>(GotoAction)

"" Tab Navigation
nmap H gT
nmap L gt
nmap <C-w>m <Action>(MoveEditorToOppositeTabGroup)
nmap <C-w><C-m> <Action>(MoveEditorToOppositeTabGroup)
nmap <C-w>n gt
nmap <C-w>p gT
nmap <C-w><C-n> gt
nmap <C-w><C-p> gT

"nmap <C-o> <Action>(Back)
"nmap <C-i> <Action>(Forward)
nmap <C-S-o> <C-o>
nmap <C-S-i> <C-i>

nmap s <Action>(AceAction)
nmap S <Action>(AceTargetAction)
"map g <Action>(AceLineAction)
"nmap S <Action>(AceBackwardAction)
"nmap s <Action>(AceForwardAction)

nmap gh :action Git.Add<CR>

nmap <C-e> <Action>(ActivateProjectToolWindow)
